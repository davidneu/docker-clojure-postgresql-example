#!/bin/sh

set -o errexit 
set -o nounset

usage="Usage: myapp {build | up | down | clj | db | psql | clean}"

if [ $# -eq 1 ]; then

  cmd=$1

  case $cmd in

    # myapp build
    build )
      echo 'build ...'
      docker-compose --no-ansi build --force-rm clj-dev
      ;;

    # myapp build-prod
    build-prod )
      echo 'build-prod ...'
      docker-compose --no-ansi build --force-rm clj-prod
      ;;

    # myapp up
    up )
      echo 'up ...'
      docker-compose --no-ansi up --remove-orphans -d clj-dev
      ;;

    # myapp up-prod
    up )
      echo 'up-prod ...'
      docker-compose --no-ansi up --remove-orphans -d clj-prod
      ;;

    # myapp down
    down )
      echo 'down ...'
      docker-compose --no-ansi down --volumes --remove-orphans
      ;;

    # myapp clj
    clj )
      echo 'clj ...'
      docker exec -it --detach-keys="ctrl-@" myapp_clj_dev_container "/bin/bash"
      ;;

    # myapp db
    db )
      echo 'db ...'
      docker exec -it --detach-keys="ctrl-@" myapp_db_dev_container "/bin/bash"      
      ;;

    # myapp psql
    psql )
      echo 'psql ...'
      docker exec -it --detach-keys='ctrl-@' myapp_clj_dev_container /usr/bin/psql -U myapp -h db-dev myapp
      ;;

    # myapp clean
    clean )
      echo 'clean ...'
      set +e
      docker-compose --no-ansi down --volumes --remove-orphans
      docker container rm myapp_clj_dev_container --volumes
      docker image rm myapp_clj_dev_image:latest
      docker container rm myapp_db_dev_container --volumes
      ;;

    * )
      echo $usage
      ;;
  esac

else
    echo $usage
fi

